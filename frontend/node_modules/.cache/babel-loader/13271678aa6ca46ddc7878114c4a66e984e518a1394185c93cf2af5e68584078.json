{"ast":null,"code":"var _jsxFileName = \"/Users/ayushaayalur/Documents/ai-growth-backlog-generator/frontend/src/components/LoadingBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './LoadingBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingBar = ({\n  isVisible,\n  onComplete\n}) => {\n  _s();\n  var _steps$currentStep;\n  const [progress, setProgress] = useState(0);\n  const [currentStep, setCurrentStep] = useState(0);\n  const steps = [{\n    name: 'Analyzing screenshot...',\n    duration: 1000\n  }, {\n    name: 'Extracting text content...',\n    duration: 1200\n  }, {\n    name: 'Identifying business type...',\n    duration: 800\n  }, {\n    name: 'Generating growth ideas...',\n    duration: 1500\n  }, {\n    name: 'Calculating ICE scores...',\n    duration: 1000\n  }, {\n    name: 'Finalizing results...',\n    duration: 500\n  }];\n  useEffect(() => {\n    if (!isVisible) {\n      setProgress(0);\n      setCurrentStep(0);\n      return;\n    }\n    let currentProgress = 0;\n    let stepIndex = 0;\n    const totalDuration = 6000; // 6 seconds total\n    const interval = 50; // Update every 50ms for smooth animation\n\n    const timer = setInterval(() => {\n      currentProgress += interval / totalDuration * 100;\n\n      // Update step based on progress\n      const stepProgress = stepIndex / steps.length * 100;\n      if (currentProgress >= stepProgress && stepIndex < steps.length - 1) {\n        stepIndex++;\n        setCurrentStep(stepIndex);\n      }\n      if (currentProgress >= 100) {\n        currentProgress = 100;\n        clearInterval(timer);\n        setTimeout(() => {\n          onComplete && onComplete();\n        }, 200);\n      }\n      setProgress(currentProgress);\n    }, interval);\n    return () => clearInterval(timer);\n  }, [isVisible, onComplete]);\n  if (!isVisible) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"48\",\n          height: \"48\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: [/*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M12 2L2 7L12 12L22 7L12 2Z\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M2 17L12 22L22 17\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M2 12L12 17L22 12\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Generating Growth Backlog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: ((_steps$currentStep = steps[currentStep]) === null || _steps$currentStep === void 0 ? void 0 : _steps$currentStep.name) || 'Processing...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${progress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-text\",\n          children: [Math.round(progress), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-steps\",\n        children: steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step ${index <= currentStep ? 'active' : ''} ${index < currentStep ? 'completed' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step-indicator\",\n            children: index < currentStep ? /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"16\",\n              height: \"16\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M20 6L9 17L4 12\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-name\",\n            children: step.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(LoadingBar, \"IuIbAVaSO8NxU7Gv1/jJs/ty/J0=\");\n_c = LoadingBar;\nexport default LoadingBar;\nvar _c;\n$RefreshReg$(_c, \"LoadingBar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LoadingBar","isVisible","onComplete","_s","_steps$currentStep","progress","setProgress","currentStep","setCurrentStep","steps","name","duration","currentProgress","stepIndex","totalDuration","interval","timer","setInterval","stepProgress","length","clearInterval","setTimeout","className","children","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fileName","_jsxFileName","lineNumber","columnNumber","style","Math","round","map","step","index","_c","$RefreshReg$"],"sources":["/Users/ayushaayalur/Documents/ai-growth-backlog-generator/frontend/src/components/LoadingBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './LoadingBar.css';\n\nconst LoadingBar = ({ isVisible, onComplete }) => {\n  const [progress, setProgress] = useState(0);\n  const [currentStep, setCurrentStep] = useState(0);\n\n  const steps = [\n    { name: 'Analyzing screenshot...', duration: 1000 },\n    { name: 'Extracting text content...', duration: 1200 },\n    { name: 'Identifying business type...', duration: 800 },\n    { name: 'Generating growth ideas...', duration: 1500 },\n    { name: 'Calculating ICE scores...', duration: 1000 },\n    { name: 'Finalizing results...', duration: 500 }\n  ];\n\n  useEffect(() => {\n    if (!isVisible) {\n      setProgress(0);\n      setCurrentStep(0);\n      return;\n    }\n\n    let currentProgress = 0;\n    let stepIndex = 0;\n    const totalDuration = 6000; // 6 seconds total\n    const interval = 50; // Update every 50ms for smooth animation\n\n    const timer = setInterval(() => {\n      currentProgress += (interval / totalDuration) * 100;\n      \n      // Update step based on progress\n      const stepProgress = (stepIndex / steps.length) * 100;\n      if (currentProgress >= stepProgress && stepIndex < steps.length - 1) {\n        stepIndex++;\n        setCurrentStep(stepIndex);\n      }\n\n      if (currentProgress >= 100) {\n        currentProgress = 100;\n        clearInterval(timer);\n        setTimeout(() => {\n          onComplete && onComplete();\n        }, 200);\n      }\n\n      setProgress(currentProgress);\n    }, interval);\n\n    return () => clearInterval(timer);\n  }, [isVisible, onComplete]);\n\n  if (!isVisible) return null;\n\n  return (\n    <div className=\"loading-container\">\n      <div className=\"loading-content\">\n        <div className=\"loading-icon\">\n          <svg width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M12 2L2 7L12 12L22 7L12 2Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            <path d=\"M2 17L12 22L22 17\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            <path d=\"M2 12L12 17L22 12\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n          </svg>\n        </div>\n        \n        <div className=\"loading-text\">\n          <h3>Generating Growth Backlog</h3>\n          <p>{steps[currentStep]?.name || 'Processing...'}</p>\n        </div>\n\n        <div className=\"progress-container\">\n          <div className=\"progress-bar\">\n            <div \n              className=\"progress-fill\"\n              style={{ width: `${progress}%` }}\n            ></div>\n          </div>\n          <div className=\"progress-text\">{Math.round(progress)}%</div>\n        </div>\n\n        <div className=\"loading-steps\">\n          {steps.map((step, index) => (\n            <div \n              key={index} \n              className={`step ${index <= currentStep ? 'active' : ''} ${index < currentStep ? 'completed' : ''}`}\n            >\n              <div className=\"step-indicator\">\n                {index < currentStep ? (\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M20 6L9 17L4 12\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  </svg>\n                ) : (\n                  <span>{index + 1}</span>\n                )}\n              </div>\n              <span className=\"step-name\">{step.name}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingBar; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,kBAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAEjD,MAAMa,KAAK,GAAG,CACZ;IAAEC,IAAI,EAAE,yBAAyB;IAAEC,QAAQ,EAAE;EAAK,CAAC,EACnD;IAAED,IAAI,EAAE,4BAA4B;IAAEC,QAAQ,EAAE;EAAK,CAAC,EACtD;IAAED,IAAI,EAAE,8BAA8B;IAAEC,QAAQ,EAAE;EAAI,CAAC,EACvD;IAAED,IAAI,EAAE,4BAA4B;IAAEC,QAAQ,EAAE;EAAK,CAAC,EACtD;IAAED,IAAI,EAAE,2BAA2B;IAAEC,QAAQ,EAAE;EAAK,CAAC,EACrD;IAAED,IAAI,EAAE,uBAAuB;IAAEC,QAAQ,EAAE;EAAI,CAAC,CACjD;EAEDd,SAAS,CAAC,MAAM;IACd,IAAI,CAACI,SAAS,EAAE;MACdK,WAAW,CAAC,CAAC,CAAC;MACdE,cAAc,CAAC,CAAC,CAAC;MACjB;IACF;IAEA,IAAII,eAAe,GAAG,CAAC;IACvB,IAAIC,SAAS,GAAG,CAAC;IACjB,MAAMC,aAAa,GAAG,IAAI,CAAC,CAAC;IAC5B,MAAMC,QAAQ,GAAG,EAAE,CAAC,CAAC;;IAErB,MAAMC,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BL,eAAe,IAAKG,QAAQ,GAAGD,aAAa,GAAI,GAAG;;MAEnD;MACA,MAAMI,YAAY,GAAIL,SAAS,GAAGJ,KAAK,CAACU,MAAM,GAAI,GAAG;MACrD,IAAIP,eAAe,IAAIM,YAAY,IAAIL,SAAS,GAAGJ,KAAK,CAACU,MAAM,GAAG,CAAC,EAAE;QACnEN,SAAS,EAAE;QACXL,cAAc,CAACK,SAAS,CAAC;MAC3B;MAEA,IAAID,eAAe,IAAI,GAAG,EAAE;QAC1BA,eAAe,GAAG,GAAG;QACrBQ,aAAa,CAACJ,KAAK,CAAC;QACpBK,UAAU,CAAC,MAAM;UACfnB,UAAU,IAAIA,UAAU,CAAC,CAAC;QAC5B,CAAC,EAAE,GAAG,CAAC;MACT;MAEAI,WAAW,CAACM,eAAe,CAAC;IAC9B,CAAC,EAAEG,QAAQ,CAAC;IAEZ,OAAO,MAAMK,aAAa,CAACJ,KAAK,CAAC;EACnC,CAAC,EAAE,CAACf,SAAS,EAAEC,UAAU,CAAC,CAAC;EAE3B,IAAI,CAACD,SAAS,EAAE,OAAO,IAAI;EAE3B,oBACEF,OAAA;IAAKuB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAChCxB,OAAA;MAAKuB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BxB,OAAA;QAAKuB,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3BxB,OAAA;UAAKyB,KAAK,EAAC,IAAI;UAACC,MAAM,EAAC,IAAI;UAACC,OAAO,EAAC,WAAW;UAACC,IAAI,EAAC,MAAM;UAACC,KAAK,EAAC,4BAA4B;UAAAL,QAAA,gBAC5FxB,OAAA;YAAM8B,CAAC,EAAC,4BAA4B;YAACC,MAAM,EAAC,cAAc;YAACC,WAAW,EAAC,GAAG;YAACC,aAAa,EAAC,OAAO;YAACC,cAAc,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eACzHtC,OAAA;YAAM8B,CAAC,EAAC,mBAAmB;YAACC,MAAM,EAAC,cAAc;YAACC,WAAW,EAAC,GAAG;YAACC,aAAa,EAAC,OAAO;YAACC,cAAc,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eAChHtC,OAAA;YAAM8B,CAAC,EAAC,mBAAmB;YAACC,MAAM,EAAC,cAAc;YAACC,WAAW,EAAC,GAAG;YAACC,aAAa,EAAC,OAAO;YAACC,cAAc,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7G;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENtC,OAAA;QAAKuB,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BxB,OAAA;UAAAwB,QAAA,EAAI;QAAyB;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClCtC,OAAA;UAAAwB,QAAA,EAAI,EAAAnB,kBAAA,GAAAK,KAAK,CAACF,WAAW,CAAC,cAAAH,kBAAA,uBAAlBA,kBAAA,CAAoBM,IAAI,KAAI;QAAe;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eAENtC,OAAA;QAAKuB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjCxB,OAAA;UAAKuB,SAAS,EAAC,cAAc;UAAAC,QAAA,eAC3BxB,OAAA;YACEuB,SAAS,EAAC,eAAe;YACzBgB,KAAK,EAAE;cAAEd,KAAK,EAAE,GAAGnB,QAAQ;YAAI;UAAE;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACNtC,OAAA;UAAKuB,SAAS,EAAC,eAAe;UAAAC,QAAA,GAAEgB,IAAI,CAACC,KAAK,CAACnC,QAAQ,CAAC,EAAC,GAAC;QAAA;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,eAENtC,OAAA;QAAKuB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3Bd,KAAK,CAACgC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrB5C,OAAA;UAEEuB,SAAS,EAAE,QAAQqB,KAAK,IAAIpC,WAAW,GAAG,QAAQ,GAAG,EAAE,IAAIoC,KAAK,GAAGpC,WAAW,GAAG,WAAW,GAAG,EAAE,EAAG;UAAAgB,QAAA,gBAEpGxB,OAAA;YAAKuB,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAC5BoB,KAAK,GAAGpC,WAAW,gBAClBR,OAAA;cAAKyB,KAAK,EAAC,IAAI;cAACC,MAAM,EAAC,IAAI;cAACC,OAAO,EAAC,WAAW;cAACC,IAAI,EAAC,MAAM;cAACC,KAAK,EAAC,4BAA4B;cAAAL,QAAA,eAC5FxB,OAAA;gBAAM8B,CAAC,EAAC,iBAAiB;gBAACC,MAAM,EAAC,cAAc;gBAACC,WAAW,EAAC,GAAG;gBAACC,aAAa,EAAC,OAAO;gBAACC,cAAc,EAAC;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3G,CAAC,gBAENtC,OAAA;cAAAwB,QAAA,EAAOoB,KAAK,GAAG;YAAC;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UACxB;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACNtC,OAAA;YAAMuB,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAEmB,IAAI,CAAChC;UAAI;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GAZzCM,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAaP,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClC,EAAA,CAnGIH,UAAU;AAAA4C,EAAA,GAAV5C,UAAU;AAqGhB,eAAeA,UAAU;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}