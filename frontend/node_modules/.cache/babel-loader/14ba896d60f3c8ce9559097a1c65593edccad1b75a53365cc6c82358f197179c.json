{"ast":null,"code":"var _jsxFileName = \"/Users/ayushaayalur/Documents/ai-growth-backlog-generator/frontend/src/components/LoadingBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './LoadingBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingBar = ({\n  isVisible,\n  onComplete\n}) => {\n  _s();\n  var _steps$currentStep;\n  const [progress, setProgress] = useState(0);\n  const [currentStep, setCurrentStep] = useState(0);\n  const steps = [{\n    name: 'Uploading screenshot...',\n    duration: 800\n  }, {\n    name: 'Analyzing visual elements...',\n    duration: 1000\n  }, {\n    name: 'Extracting text content...',\n    duration: 800\n  }, {\n    name: 'Generating CRO ideas...',\n    duration: 2000\n  }, {\n    name: 'Calculating ICE scores...',\n    duration: 800\n  }, {\n    name: 'Finalizing results...',\n    duration: 600\n  }];\n  useEffect(() => {\n    if (!isVisible) {\n      setProgress(0);\n      setCurrentStep(0);\n      return;\n    }\n    let currentProgress = 0;\n    let stepIndex = 0;\n    const totalDuration = steps.reduce((sum, step) => sum + step.duration, 0);\n    const interval = setInterval(() => {\n      if (stepIndex >= steps.length) {\n        clearInterval(interval);\n        // Don't set to 100% immediately, wait for actual completion\n        setProgress(95);\n        setCurrentStep(steps.length - 1);\n        return;\n      }\n      const step = steps[stepIndex];\n      const stepProgress = step.duration / totalDuration * 95; // Only go to 95%\n\n      currentProgress += stepProgress;\n      setProgress(Math.min(currentProgress, 95));\n      setCurrentStep(stepIndex);\n      stepIndex++;\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [isVisible, onComplete]);\n\n  // Update progress when analysis completes\n  useEffect(() => {\n    if (!isVisible && progress > 0) {\n      setProgress(100);\n      setCurrentStep(steps.length - 1);\n    }\n  }, [isVisible, progress]);\n  if (!isVisible) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDD04 Analyzing Your Screenshot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"current-step\",\n        children: ((_steps$currentStep = steps[currentStep]) === null || _steps$currentStep === void 0 ? void 0 : _steps$currentStep.name) || 'Processing...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-text\",\n        children: [Math.round(progress), \"% Complete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-tips\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83D\\uDCA1 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tip:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), \" This usually takes about 6 seconds to analyze your page\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD83D\\uDCCA We're analyzing your page for conversion optimization opportunities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(LoadingBar, \"I4/0rgDQGhIL2poovbmjmn/Q374=\");\n_c = LoadingBar;\nexport default LoadingBar;\nvar _c;\n$RefreshReg$(_c, \"LoadingBar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LoadingBar","isVisible","onComplete","_s","_steps$currentStep","progress","setProgress","currentStep","setCurrentStep","steps","name","duration","currentProgress","stepIndex","totalDuration","reduce","sum","step","interval","setInterval","length","clearInterval","stepProgress","Math","min","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","round","_c","$RefreshReg$"],"sources":["/Users/ayushaayalur/Documents/ai-growth-backlog-generator/frontend/src/components/LoadingBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './LoadingBar.css';\n\nconst LoadingBar = ({ isVisible, onComplete }) => {\n  const [progress, setProgress] = useState(0);\n  const [currentStep, setCurrentStep] = useState(0);\n  \n  const steps = [\n    { name: 'Uploading screenshot...', duration: 800 },\n    { name: 'Analyzing visual elements...', duration: 1000 },\n    { name: 'Extracting text content...', duration: 800 },\n    { name: 'Generating CRO ideas...', duration: 2000 },\n    { name: 'Calculating ICE scores...', duration: 800 },\n    { name: 'Finalizing results...', duration: 600 }\n  ];\n\n  useEffect(() => {\n    if (!isVisible) {\n      setProgress(0);\n      setCurrentStep(0);\n      return;\n    }\n\n    let currentProgress = 0;\n    let stepIndex = 0;\n    \n    const totalDuration = steps.reduce((sum, step) => sum + step.duration, 0);\n    \n    const interval = setInterval(() => {\n      if (stepIndex >= steps.length) {\n        clearInterval(interval);\n        // Don't set to 100% immediately, wait for actual completion\n        setProgress(95);\n        setCurrentStep(steps.length - 1);\n        return;\n      }\n\n      const step = steps[stepIndex];\n      const stepProgress = (step.duration / totalDuration) * 95; // Only go to 95%\n      \n      currentProgress += stepProgress;\n      setProgress(Math.min(currentProgress, 95));\n      setCurrentStep(stepIndex);\n      \n      stepIndex++;\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [isVisible, onComplete]);\n\n  // Update progress when analysis completes\n  useEffect(() => {\n    if (!isVisible && progress > 0) {\n      setProgress(100);\n      setCurrentStep(steps.length - 1);\n    }\n  }, [isVisible, progress]);\n\n  if (!isVisible) return null;\n\n  return (\n    <div className=\"loading-container\">\n      <div className=\"loading-content\">\n        <h3>ðŸ”„ Analyzing Your Screenshot</h3>\n        <p className=\"current-step\">{steps[currentStep]?.name || 'Processing...'}</p>\n        \n        <div className=\"progress-bar-container\">\n          <div \n            className=\"progress-bar\" \n            style={{ width: `${progress}%` }}\n          ></div>\n        </div>\n        \n        <div className=\"progress-text\">\n          {Math.round(progress)}% Complete\n        </div>\n        \n        <div className=\"loading-tips\">\n          <p>ðŸ’¡ <strong>Tip:</strong> This usually takes about 6 seconds to analyze your page</p>\n          <p>ðŸ“Š We're analyzing your page for conversion optimization opportunities</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingBar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}