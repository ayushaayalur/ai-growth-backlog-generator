{"ast":null,"code":"var _jsxFileName = \"/Users/ayushaayalur/Documents/ai-growth-backlog-generator/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport ScreenshotUpload from './components/ScreenshotUpload';\nimport AnalysisResults from './components/AnalysisResults';\nimport LoadingBar from './components/LoadingBar';\nimport { apiService } from './services/api';\nimport { exportAnalysisResults } from './utils/csvExport';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [uploadedScreenshot, setUploadedScreenshot] = useState(null);\n  const [analysisData, setAnalysisData] = useState(null);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [error, setError] = useState(null);\n  const handleGenerateBacklog = async () => {\n    if (!uploadedScreenshot) {\n      setError('Please upload a screenshot first');\n      return;\n    }\n    setIsAnalyzing(true);\n    setError(null);\n    try {\n      console.log('Starting analysis...');\n      const result = await apiService.analyzeScreenshot(uploadedScreenshot);\n      console.log('Analysis completed:', result);\n      console.log('Number of ideas:', result.ideas ? result.ideas.length : 0);\n      console.log('First idea:', result.ideas && result.ideas.length > 0 ? result.ideas[0] : 'No ideas');\n      setAnalysisData(result);\n    } catch (err) {\n      console.error('Analysis failed:', err);\n      setError(err.message || 'Failed to analyze screenshot. Please try again.');\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n  const handleExportCSV = () => {\n    if (analysisData && analysisData.ideas) {\n      try {\n        exportAnalysisResults(analysisData.ideas, 'growth-backlog-analysis');\n      } catch (err) {\n        console.error('CSV export failed:', err);\n        setError('Failed to export CSV. Please try again.');\n      }\n    }\n  };\n  const handleRetry = () => {\n    setError(null);\n    if (uploadedScreenshot) {\n      handleGenerateBacklog();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"App-title\",\n        children: \"AI Growth Backlog Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"App-subtitle\",\n        children: \"Upload a landing page screenshot and get 20 specific, actionable growth ideas with ICE scores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"upload-section\",\n        children: [/*#__PURE__*/_jsxDEV(ScreenshotUpload, {\n          onScreenshotUploaded: setUploadedScreenshot,\n          uploadedScreenshot: uploadedScreenshot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"generate-button\",\n          onClick: handleGenerateBacklog,\n          disabled: !uploadedScreenshot || isAnalyzing,\n          children: isAnalyzing ? 'Generating...' : 'Generate Growth Backlog'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Error:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), \" \", error, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"retry-button\",\n          onClick: handleRetry,\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), isAnalyzing && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"loading-section\",\n        children: /*#__PURE__*/_jsxDEV(LoadingBar, {\n          isVisible: isAnalyzing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), analysisData && !isAnalyzing && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"results-section\",\n        children: /*#__PURE__*/_jsxDEV(AnalysisResults, {\n          analysisData: analysisData,\n          onExportCSV: handleExportCSV\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"r0s0tdo0XKqOluMxSp5KLGzNNuw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ScreenshotUpload","AnalysisResults","LoadingBar","apiService","exportAnalysisResults","jsxDEV","_jsxDEV","App","_s","uploadedScreenshot","setUploadedScreenshot","analysisData","setAnalysisData","isAnalyzing","setIsAnalyzing","error","setError","handleGenerateBacklog","console","log","result","analyzeScreenshot","ideas","length","err","message","handleExportCSV","handleRetry","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onScreenshotUploaded","onClick","disabled","isVisible","onExportCSV","_c","$RefreshReg$"],"sources":["/Users/ayushaayalur/Documents/ai-growth-backlog-generator/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport ScreenshotUpload from './components/ScreenshotUpload';\nimport AnalysisResults from './components/AnalysisResults';\nimport LoadingBar from './components/LoadingBar';\nimport { apiService } from './services/api';\nimport { exportAnalysisResults } from './utils/csvExport';\n\nfunction App() {\n  const [uploadedScreenshot, setUploadedScreenshot] = useState(null);\n  const [analysisData, setAnalysisData] = useState(null);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleGenerateBacklog = async () => {\n    if (!uploadedScreenshot) {\n      setError('Please upload a screenshot first');\n      return;\n    }\n\n    setIsAnalyzing(true);\n    setError(null);\n\n    try {\n      console.log('Starting analysis...');\n      const result = await apiService.analyzeScreenshot(uploadedScreenshot);\n      console.log('Analysis completed:', result);\n      console.log('Number of ideas:', result.ideas ? result.ideas.length : 0);\n      console.log('First idea:', result.ideas && result.ideas.length > 0 ? result.ideas[0] : 'No ideas');\n      setAnalysisData(result);\n    } catch (err) {\n      console.error('Analysis failed:', err);\n      setError(err.message || 'Failed to analyze screenshot. Please try again.');\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  const handleExportCSV = () => {\n    if (analysisData && analysisData.ideas) {\n      try {\n        exportAnalysisResults(analysisData.ideas, 'growth-backlog-analysis');\n      } catch (err) {\n        console.error('CSV export failed:', err);\n        setError('Failed to export CSV. Please try again.');\n      }\n    }\n  };\n\n  const handleRetry = () => {\n    setError(null);\n    if (uploadedScreenshot) {\n      handleGenerateBacklog();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"App-title\">AI Growth Backlog Generator</h1>\n        <p className=\"App-subtitle\">\n          Upload a landing page screenshot and get 20 specific, actionable growth ideas with ICE scores\n        </p>\n      </header>\n\n      <main className=\"main-container\">\n        <section className=\"upload-section\">\n          <ScreenshotUpload\n            onScreenshotUploaded={setUploadedScreenshot}\n            uploadedScreenshot={uploadedScreenshot}\n          />\n          \n          <button\n            className=\"generate-button\"\n            onClick={handleGenerateBacklog}\n            disabled={!uploadedScreenshot || isAnalyzing}\n          >\n            {isAnalyzing ? 'Generating...' : 'Generate Growth Backlog'}\n          </button>\n        </section>\n\n        {error && (\n          <div className=\"error-message\">\n            <strong>Error:</strong> {error}\n            <button className=\"retry-button\" onClick={handleRetry}>\n              Try Again\n            </button>\n          </div>\n        )}\n\n        {isAnalyzing && (\n          <section className=\"loading-section\">\n            <LoadingBar isVisible={isAnalyzing} />\n          </section>\n        )}\n\n        {analysisData && !isAnalyzing && (\n          <section className=\"results-section\">\n            <AnalysisResults\n              analysisData={analysisData}\n              onExportCSV={handleExportCSV}\n            />\n          </section>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}