{"ast":null,"code":"var _jsxFileName = \"/Users/ayushaayalur/Documents/ai-growth-backlog-generator/frontend/src/components/LoadingBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './LoadingBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingBar = ({\n  isVisible,\n  onComplete\n}) => {\n  _s();\n  const [progress, setProgress] = useState(0);\n  const [currentStep, setCurrentStep] = useState(0);\n  const onCompleteRef = useRef(onComplete);\n  const steps = ['Uploading screenshot...', 'Analyzing visual elements...', 'Extracting text content...', 'Generating CRO ideas...', 'Calculating ICE scores...', 'Finalizing results...'];\n  useEffect(() => {\n    if (!isVisible) {\n      setProgress(0);\n      setCurrentStep(0);\n      return;\n    }\n    const startTime = Date.now();\n    const duration = 6000; // 6 seconds\n\n    const timer = setInterval(() => {\n      const elapsed = Date.now() - startTime;\n      const newProgress = Math.min(elapsed / duration * 100, 100);\n      setProgress(newProgress);\n\n      // Update step based on progress\n      const stepIndex = Math.floor(newProgress / 100 * steps.length);\n      setCurrentStep(Math.min(stepIndex, steps.length - 1));\n      if (newProgress >= 100) {\n        clearInterval(timer);\n        if (onComplete) {\n          onComplete();\n        }\n      }\n    }, 50); // Update every 50ms for smooth animation\n\n    return () => clearInterval(timer);\n  }, [isVisible, onComplete]);\n  if (!isVisible) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDD04 Analyzing Your Screenshot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"current-step\",\n        children: steps[currentStep]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-text\",\n        children: [Math.round(progress), \"% Complete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-tips\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83D\\uDCA1 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tip:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), \" This usually takes about 6 seconds to analyze your page\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD83D\\uDCCA We're analyzing your page for conversion optimization opportunities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(LoadingBar, \"O+HnkmffhxMiu7PlcA2FX6dtdCk=\");\n_c = LoadingBar;\nexport default LoadingBar;\nvar _c;\n$RefreshReg$(_c, \"LoadingBar\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","LoadingBar","isVisible","onComplete","_s","progress","setProgress","currentStep","setCurrentStep","onCompleteRef","steps","startTime","Date","now","duration","timer","setInterval","elapsed","newProgress","Math","min","stepIndex","floor","length","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","round","_c","$RefreshReg$"],"sources":["/Users/ayushaayalur/Documents/ai-growth-backlog-generator/frontend/src/components/LoadingBar.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './LoadingBar.css';\n\nconst LoadingBar = ({ isVisible, onComplete }) => {\n  const [progress, setProgress] = useState(0);\n  const [currentStep, setCurrentStep] = useState(0);\n  const onCompleteRef = useRef(onComplete);\n\n  const steps = [\n    'Uploading screenshot...',\n    'Analyzing visual elements...',\n    'Extracting text content...',\n    'Generating CRO ideas...',\n    'Calculating ICE scores...',\n    'Finalizing results...'\n  ];\n\n  useEffect(() => {\n    if (!isVisible) {\n      setProgress(0);\n      setCurrentStep(0);\n      return;\n    }\n\n    const startTime = Date.now();\n    const duration = 6000; // 6 seconds\n\n    const timer = setInterval(() => {\n      const elapsed = Date.now() - startTime;\n      const newProgress = Math.min((elapsed / duration) * 100, 100);\n      \n      setProgress(newProgress);\n      \n      // Update step based on progress\n      const stepIndex = Math.floor((newProgress / 100) * steps.length);\n      setCurrentStep(Math.min(stepIndex, steps.length - 1));\n\n      if (newProgress >= 100) {\n        clearInterval(timer);\n        if (onComplete) {\n          onComplete();\n        }\n      }\n    }, 50); // Update every 50ms for smooth animation\n\n    return () => clearInterval(timer);\n  }, [isVisible, onComplete]);\n\n  if (!isVisible) return null;\n\n  return (\n    <div className=\"loading-container\">\n      <div className=\"loading-content\">\n        <h3>ðŸ”„ Analyzing Your Screenshot</h3>\n        <p className=\"current-step\">{steps[currentStep]}</p>\n        \n        <div className=\"progress-bar-container\">\n          <div \n            className=\"progress-bar\" \n            style={{ width: `${progress}%` }}\n          ></div>\n        </div>\n        \n        <div className=\"progress-text\">\n          {Math.round(progress)}% Complete\n        </div>\n        \n        <div className=\"loading-tips\">\n          <p>ðŸ’¡ <strong>Tip:</strong> This usually takes about 6 seconds to analyze your page</p>\n          <p>ðŸ“Š We're analyzing your page for conversion optimization opportunities</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingBar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}